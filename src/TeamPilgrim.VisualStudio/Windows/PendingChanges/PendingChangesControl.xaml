<UserControl x:Class="JustAProgrammer.TeamPilgrim.VisualStudio.Windows.PendingChanges.PendingChangesControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:attachedProperties="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.AttachedProperties"
             xmlns:controls="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Controls"
             xmlns:converters="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Converters"
             xmlns:core="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.Core"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:enums="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Common.Enums"
             xmlns:listViewLayout="clr-namespace:Itenso.Windows.Controls.ListViewLayout;assembly=Itenso.Windows.Controls.ListViewLayout"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:versionControl="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.VersionControl"
             xmlns:versionControlClient="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
             xmlns:workItemQuery="clr-namespace:JustAProgrammer.TeamPilgrim.VisualStudio.Model.WorkItemQuery"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             Height="Auto"
             d:DataContext="{d:DesignInstance core:TeamPilgrimServiceModel}"
             d:DesignHeight="300"
             d:DesignWidth="850"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TeamPilgrim.VisualStudio;component/Windows\ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:SelectedPendingChangesSummaryEnumIsCheckedBooleanConverter x:Key="SelectedPendingChangesSummaryEnumIsCheckedBooleanConverter" />
            <converters:ChangeTypeDescriptionConverter x:Key="ChangeTypeDescriptionConverter" />
            <converters:SingleObjectToObservableCollectionConverter x:Key="SingleObjectToListConverter" />

            <ObjectDataProvider x:Key="WorkItemCheckinActions"
                                MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:SelectedWorkItemCheckinActionEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style TargetType="ToolBar">
                <Setter Property="ToolBarTray.IsLocked" Value="True" />
                <Setter Property="OverflowMode" Value="AsNeeded" />
                <Setter Property="Template" Value="{DynamicResource ToolbarTemplate}" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel>
        <ToolBarTray Orientation="Vertical">
            <ToolBar>
                <RadioButton x:Name="SourceFilesRadioButton" Style="{StaticResource SourceFilesRadioButtonStyle}">
                    <Image />
                </RadioButton>

                <RadioButton x:Name="WorkItemsRadioButton" Style="{StaticResource WorkItemsRadioButtonStyle}">
                    <Image />
                </RadioButton>

                <RadioButton x:Name="CheckInNotesRadioButton" Style="{StaticResource CheckInNotesRadioButtonStyle}">
                    <Image />
                </RadioButton>

                <RadioButton x:Name="PolicyWarningsRadioButton" Style="{StaticResource PolicyWarningsRadioButtonStyle}">
                    <Image />
                </RadioButton>

                <Button Command="{Binding Path=ShowResolveConflicttManagerCommand}" Style="{StaticResource ShowResolveConflicttManagerButtonStyle}">
                    <Image />
                </Button>
            </ToolBar>
        </ToolBarTray>
        <TabControl BorderThickness="0"
                    DockPanel.Dock="Right"
                    Padding="0">
            <TabControl.Resources>
                <!--  http://stackoverflow.com/questions/6278720/wpf-toggle-panel-visibility  -->
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem" />
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>

            <TabItem x:Name="SourceFilesTabItem" IsSelected="{Binding ElementName=SourceFilesRadioButton, Path=IsChecked}">
                <DockPanel>
                    <ToolBarTray DockPanel.Dock="Top">
                        <ToolBar>
                            <Button VerticalAlignment="Center"
                                    Command="{Binding Path=CheckInCommand}"
                                    DataContext="{Binding Path=SelectedWorkspaceModel}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16"
                                           Height="16"
                                           Margin="0,0,2,0"
                                           Source="/TeamPilgrim.VisualStudio;component/Resources\CheckIn_13188.png" />
                                    <TextBlock>Check In</TextBlock>
                                </StackPanel>
                            </Button>

                            <Separator />

                            <Button VerticalAlignment="Center"
                                    Command="{Binding ShelveCommand}"
                                    DataContext="{Binding Path=SelectedWorkspaceModel}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16"
                                           Height="16"
                                           Margin="0,0,2,0"
                                           Source="../../Resources/shelve.png" />
                                    <TextBlock>Shelve</TextBlock>
                                </StackPanel>
                            </Button>

                            <Button VerticalAlignment="Center"
                                    Command="{Binding UnshelveCommand}"
                                    DataContext="{Binding Path=SelectedWorkspaceModel}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16"
                                           Height="16"
                                           Margin="0,0,2,0"
                                           Source="../../Resources/unshelve.png" />
                                    <TextBlock>Unshelve</TextBlock>
                                </StackPanel>
                            </Button>

                            <Separator />
                            <ToggleButton VerticalAlignment="Center"
                                          DataContext="{Binding Path=SelectedWorkspaceModel}"
                                          IsChecked="{Binding Path=FilterSolution}"
                                          IsEnabled="{Binding Path=SolutionIsOpen}"
                                          ToolTip="Filter by Solution">

                                <Image Width="16"
                                       Height="16"
                                       Source="/TeamPilgrim.VisualStudio;component/Resources\Solution_8308.png" />
                            </ToggleButton>

                            <Separator />

                            <!--
                                <Separator />
                                <ToggleButton IsEnabled="False">Comments</ToggleButton>
                                
                                Compare Button Dropdown Disabled/Needs Implementing
                                
                                <Button>Cmp with Unmodified</Button>
                                <Button>Cmp with Workspace</Button>
                                <Button>Cmp with Latest</Button>
                            -->

                            <Button VerticalAlignment="Center"
                                    Command="{Binding Path=ViewPendingChangeCommand}"
                                    CommandParameter="{Binding ElementName=PendingChangesListView,
                                                               Path=SelectedItems}"
                                    DataContext="{Binding Path=SelectedWorkspaceModel}">
                                View File
                            </Button>

                            <Button VerticalAlignment="Center"
                                    Command="{Binding Path=UndoPendingChangeCommand}"
                                    CommandParameter="{Binding ElementName=PendingChangesListView,
                                                               Path=SelectedItems}"
                                    DataContext="{Binding Path=SelectedWorkspaceModel}"
                                    ToolTip="Undo pending changes">
                                <Image Width="16"
                                       Height="16"
                                       Source="/TeamPilgrim.VisualStudio;component/Resources\Arrow_UndoRevertRestore_16xLG.png" />
                            </Button>

                            <Separator />

                            <Button VerticalAlignment="Center"
                                    Command="{Binding Path=RefreshPendingChangesCommand}"
                                    DataContext="{Binding Path=SelectedWorkspaceModel}">
                                <Image Width="16"
                                       Height="16"
                                       Source="/TeamPilgrim.VisualStudio;component/Resources\refresh_16xLG.png" />
                            </Button>

                            <Separator />
                            <TextBlock VerticalAlignment="Center">Workspace:</TextBlock>
                            <ComboBox Width="120"
                                      Margin="0"
                                      VerticalAlignment="Center"
                                      ItemsSource="{Binding Path=WorkspaceInfoModels}"
                                      SelectedValue="{Binding Path=SelectedWorkspaceInfoModel}">

                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="versionControl:WorkspaceInfoModel">
                                        <TextBlock Text="{Binding Path=WorkspaceInfo.Name}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                        </ToolBar>
                    </ToolBarTray>

                    <TextBlock DockPanel.Dock="Top">Comment:</TextBlock>
                    <TextBox AcceptsReturn="True"
                             DataContext="{Binding Path=SelectedWorkspaceModel}"
                             DockPanel.Dock="Top"
                             Text="{Binding Path=Comment,
                                            UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap" />

                    <ListView x:Name="PendingChangesListView"
                              HorizontalAlignment="Stretch"
                              DataContext="{Binding Path=SelectedWorkspaceModel}"
                              ItemsSource="{Binding Path=PendingChanges}"
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              attachedProperties:GridViewSort.AutoSort="True"
                              attachedProperties:PreviewKeyDownReturnOnly.Command="{Binding Path=ViewPendingChangeCommand}"
                              attachedProperties:PreviewKeyDownReturnOnly.CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                                                 Path=SelectedItems}"
                              attachedProperties:PreviewKeyDownReturnPlusShift.Command="{Binding Path=CompareWithLatestCommand}"
                              attachedProperties:PreviewKeyDownReturnPlusShift.CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                                                 Path=SelectedItems}"
                              attachedProperties:PreviewKeyDownReturnPlusControl.Command="{Binding Path=CompareWithWorkspaceCommand}"
                              attachedProperties:PreviewKeyDownReturnPlusControl.CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                                                    Path=SelectedItems}"
                              attachedProperties:PreviewKeyDownControlZ.Command="{Binding Path=UndoPendingChangeCommand}"
                              attachedProperties:PreviewKeyDownControlZ.CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                                          Path=SelectedItems}"
                              attachedProperties:PreviewSpaceKeyDownSelectPendingChanges.Command="{Binding Path=SelectPendingChangesCommand}"
                              listViewLayout:ListViewLayoutManager.Enabled="true">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="attachedProperties:MouseDoubleClick.Command" Value="{Binding ElementName=PendingChangesListView, Path=DataContext.ViewPendingChangeCommand}" />
                                <Setter Property="attachedProperties:MouseDoubleClick.CommandParameter" Value="{Binding Converter={StaticResource SingleObjectToListConverter}}" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu x:Name="PendingChangesContextMenu" d:DataContext="{d:DesignInstance versionControl:WorkspaceServiceModel}">

                                <MenuItem Command="{Binding Path=ViewPendingChangeCommand}"
                                          CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                     Path=SelectedItems}"
                                          Header="View" />

                                <Separator />
                                <MenuItem Header="Compare">

                                    <MenuItem Command="{Binding Path=CompareWithWorkspaceCommand}"
                                              CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                         Path=SelectedItems}"
                                              Header="With workspace version..." />

                                    <MenuItem Command="{Binding Path=CompareWithLatestCommand}"
                                              CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                         Path=SelectedItems}"
                                              Header="With latest version..." />

                                </MenuItem>

                                <MenuItem Command="{Binding Path=UndoPendingChangeCommand}"
                                          CommandParameter="{Binding ElementName=PendingChangesListView,
                                                                     Path=SelectedItems}"
                                          Header="Undo">
                                    <MenuItem.Icon>
                                        <Image Source="/TeamPilgrim.VisualStudio;component/Resources/Arrow_UndoRevertRestore_16xLG_color.png" />
                                    </MenuItem.Icon>
                                </MenuItem>

                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn listViewLayout:FixedColumn.Width="20">
                                    <GridViewColumn.Header>
                                        <controls:CustomCheckBox x:Name="PendingChangesAllCheckbox"
                                                                 Click="PendingChangesAllCheckboxOnClick"
                                                                 IsChecked="{Binding Path=PendingChangesSummary,
                                                                                     Converter={StaticResource SelectedPendingChangesSummaryEnumIsCheckedBooleanConverter},
                                                                                     Mode=OneWay}"
                                                                 IsThreeState="true" />
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox Click="PendingChangesCheckboxClicked"
                                                      DataContext="{Binding}"
                                                      IsChecked="{Binding Path=IncludeChange,
                                                                          Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn x:Name="GridViewColumnPendingChangesFileName"
                                                attachedProperties:GridViewSort.PropertyName="Change.FileName"
                                                listViewLayout:RangeColumn.MinWidth="150">

                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}">File</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="versionControl:PendingChangeModel">
                                            <TextBlock DockPanel.Dock="Right" Text="{Binding Path=Change.FileName, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn x:Name="GridViewColumnPendingChangesChangeTypeName"
                                                attachedProperties:GridViewSort.PropertyName="Change.ChangeTypeName"
                                                listViewLayout:RangeColumn.MinWidth="70">

                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}">Change</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="versionControl:PendingChangeModel">
                                            <TextBlock Text="{Binding Path=Change, Mode=OneWay, Converter={StaticResource ChangeTypeDescriptionConverter}}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn x:Name="GridViewColumnPendingChangesLocalOrServerFolder"
                                                attachedProperties:GridViewSort.PropertyName="Change.LocalOrServerFolder"
                                                listViewLayout:RangeColumn.IsFillColumn="true"
                                                listViewLayout:RangeColumn.MinWidth="200">

                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}" attachedProperties:GridViewSort.SecondarySortColumn="Change.FileName">Folder</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="versionControl:PendingChangeModel">
                                            <TextBlock Text="{Binding Path=Change.LocalOrServerFolder, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="WorkItemsTabItem" IsSelected="{Binding ElementName=WorkItemsRadioButton, Path=IsChecked}">
                <DockPanel>
                    <ToolBar DockPanel.Dock="Top">
                        <Button Command="{Binding Path=CheckInCommand}" DataContext="{Binding Path=SelectedWorkspaceModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16"
                                       Height="16"
                                       Margin="0,0,2,0"
                                       Source="/TeamPilgrim.VisualStudio;component/Resources\CheckIn_13188.png" />
                                <TextBlock>Check In</TextBlock>
                            </StackPanel>
                        </Button>

                        <Separator />

                        <TextBlock>Query:</TextBlock>

                        <ComboBox Width="200"
                                  DataContext="{Binding Path=SelectedWorkspaceModel}"
                                  DisplayMemberPath="Formatted"
                                  IsEditable="False"
                                  ItemsSource="{Binding Path=PreviouslySelectedWorkItemQueries}"
                                  SelectedItem="{Binding Path=CurrentPreviouslySelectedWorkItemQuery}" />

                        <Button Command="{Binding Path=ShowSelectWorkItemQueryCommand}" DataContext="{Binding Path=SelectedWorkspaceModel}">...</Button>

                        <Separator />

                        <Button Command="{Binding Path=RefreshSelectedDefinitionWorkItemsCommand}" DataContext="{Binding Path=SelectedWorkspaceModel}">
                            <Image Width="16"
                                   Height="16"
                                   Source="/TeamPilgrim.VisualStudio;component/Resources\refresh_16xLG.png" />
                        </Button>
                    </ToolBar>

                    <ListView x:Name="WorkItemsListView"
                              DataContext="{Binding Path=SelectedWorkspaceModel}"
                              DockPanel.Dock="Bottom"
                              ItemsSource="{Binding Path=WorkItems}"
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              attachedProperties:GridViewSort.AutoSort="True"
                              attachedProperties:PreviewKeyDownReturnOnly.Command="{Binding Path=ViewWorkItemCommand}"
                              attachedProperties:PreviewKeyDownReturnOnly.CommandParameter="{Binding ElementName=WorkItemsListView,
                                                                                                 Path=SelectedItems}"
                              attachedProperties:PreviewSpaceKeyDownSelectWorkItems.Command="{Binding Path=SelectWorkItemsCommand}"
                              listViewLayout:ListViewLayoutManager.Enabled="true">

                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="attachedProperties:MouseDoubleClick.Command" Value="{Binding ElementName=WorkItemsListView, Path=DataContext.ViewWorkItemCommand}" />
                                <Setter Property="attachedProperties:MouseDoubleClick.CommandParameter" Value="{Binding Converter={StaticResource SingleObjectToListConverter}}" />
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.View>
                            <GridView>
                                <GridViewColumn listViewLayout:FixedColumn.Width="20">

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="workItemQuery:WorkItemModel">
                                            <CheckBox Click="PendingChangeWorkItemCheckboxClicked"
                                                      DataContext="{Binding}"
                                                      IsChecked="{Binding Path=IsSelected,
                                                                          Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn x:Name="GridViewColumnWorkItemsCheckinAction"
                                                attachedProperties:GridViewSort.PropertyName="IsSelectedWorkItemCheckinAction"
                                                listViewLayout:RangeColumn.MinWidth="115">

                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}">Check-in Action</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="workItemQuery:WorkItemModel">
                                            <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=WorkItemCheckinActions}}"
                                                      SelectedItem="{Binding Path=WorkItemCheckinAction}"
                                                      Visibility="{Binding Path=IsSelected,
                                                                           Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn x:Name="GridViewColumnWorkItemsId"
                                                attachedProperties:GridViewSort.PropertyName="WorkItem.Id"
                                                listViewLayout:RangeColumn.MinWidth="75">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}">ID</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="workItemQuery:WorkItemModel">
                                            <TextBlock Text="{Binding Path=WorkItem.Id, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn x:Name="GridViewColumnWorkItemsType"
                                                attachedProperties:GridViewSort.PropertyName="WorkItem.Type.Name"
                                                listViewLayout:RangeColumn.MinWidth="80">

                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}">Type</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="workItemQuery:WorkItemModel">
                                            <TextBlock Text="{Binding Path=WorkItem.Type.Name, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn x:Name="GridViewColumnWorkItemsTitle"
                                                attachedProperties:GridViewSort.PropertyName="WorkItem.Title"
                                                listViewLayout:RangeColumn.IsFillColumn="True"
                                                listViewLayout:RangeColumn.MinWidth="80">

                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}">Title</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="workItemQuery:WorkItemModel">
                                            <TextBlock Text="{Binding Path=WorkItem.Title, Mode=OneWay}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="CheckInNotesTabItem" IsSelected="{Binding ElementName=CheckInNotesRadioButton, Path=IsChecked}">
                <DockPanel>
                    <ToolBar DockPanel.Dock="Top">
                        <Button Command="{Binding Path=CheckInCommand}" DataContext="{Binding Path=SelectedWorkspaceModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16"
                                       Height="16"
                                       Margin="0,0,2,0"
                                       Source="/TeamPilgrim.VisualStudio;component/Resources\CheckIn_13188.png" />
                                <TextBlock>Check In</TextBlock>
                            </StackPanel>
                        </Button>
                    </ToolBar>
                    <ListView HorizontalContentAlignment="Stretch"
                              DataContext="{Binding Path=SelectedWorkspaceModel}"
                              DockPanel.Dock="Bottom"
                              ItemsSource="{Binding Path=CheckinNotes}"
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="versionControl:CheckinNoteModel">
                                <Expander Header="{Binding Path=CheckinNoteFieldDefinition.Name}" IsExpanded="True">
                                    <xctk:WatermarkTextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}">
                                        <xctk:WatermarkTextBox.Style>
                                            <Style TargetType="xctk:WatermarkTextBox">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=CheckinNoteFieldDefinition.Required}" Value="True">
                                                        <Setter Property="Watermark" Value="&lt;Required&gt;" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </xctk:WatermarkTextBox.Style>
                                    </xctk:WatermarkTextBox>
                                </Expander>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </DockPanel>
            </TabItem>
            <TabItem x:Name="PolicyWarningsTabItem" IsSelected="{Binding ElementName=PolicyWarningsRadioButton, Path=IsChecked}">
                <DockPanel Name="PolicyWarningsDataDockPanel">
                    <ToolBar DockPanel.Dock="Top">
                        <Button Command="{Binding Path=CheckInCommand}" DataContext="{Binding Path=SelectedWorkspaceModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16"
                                       Height="16"
                                       Margin="0,0,2,0"
                                       Source="/TeamPilgrim.VisualStudio;component/Resources\CheckIn_13188.png" />
                                <TextBlock>Check In</TextBlock>
                            </StackPanel>
                        </Button>
                    </ToolBar>
                    <ListView DataContext="{Binding Path=SelectedWorkspaceModel.CheckinEvaluationResult}"
                              ItemsSource="{Binding Path=PolicyFailures}"
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling"
                              listViewLayout:ListViewLayoutManager.Enabled="true">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn listViewLayout:RangeColumn.IsFillColumn="True" listViewLayout:RangeColumn.MinWidth="200">
                                    <GridViewColumn.Header>
                                        <GridViewColumnHeader Style="{StaticResource TextGridViewColumnHeader}">Description</GridViewColumnHeader>
                                    </GridViewColumn.Header>

                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate DataType="versionControlClient:PolicyFailure">
                                            <TextBlock Text="{Binding Path=Message}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</UserControl>
